% _______________________________________________________________________
function AV = zagSV1( Last , handles)
% Di=1/0 - расчет характеристик с/без учета дисперсии
% QS     - к-во слоев
% pvB    - {Пары №№ строк таблицы eKZ, Веса этих пар} при задании для 
%          100% B203-слоя к-тов Зельмаера лиейной комбинацией пар строк, 
%          содержащих B2O3 
% pvBS   - последний Составной pvB(на основе лин.комб к.Зельмаера)
% pvZ    - Пары №№ строк и Веса этих пар для каждого слоя СВ
% KZBU   - к-ты Зельмаера для 100% B203-слоя по умолчанию
% KZB    - к-ты Зельмаера для 100% B203-слоя текущие
% PGB    - проценты Ge и Bor в слоях СВ
% LZ     - граничные значения lam для представления Зельмаера
% hL     - шаг по L=lam
% KZ     - к-ты Зельмаера для выбранных PGB, выч-ся по pvZ
% nT     - № типа СВ
% n      - порядок моды n
% Lw     - LambdaWork,  раб длина волны (1.55, 1.06)
% c      = a/b 
% vGX     - границы х.числа Х в волноведущем слое(с макс пп)
% mm     - границы азимутальных чисел m
% qX     - к-во значений Х в сетке SX в DVAX\UR0
% DxHF   - производная х.ф. HF в НЕ-нуле 
% n_290  - qL*2-м-ца:  пп n^2 для 2 слоев: c max и min пп
% dvaX   - вых м-ца DVAX. В кажд ст-це: m,L9,q,Lot,dva, x1,...,xq
% dvaX1  - вых c-ц  DVAX% 
% XnXkK  - [Xn Xk K] - п-ры К-сетки для Х
% Hgru   - шаг Нгрубое для построения графика на всем ин-ле(не поиск корня) 
% RV     - вектор Режим вычислений
%                  в DVAX
%  RVD(1) = 1: строить графики S1(2a) независимо
%  RVD(2) = левое 2а из двух, при к-х S1(2a)=0 
%  RVD(3) = qdva   - к-во значений 2а

global eKZ  TSV   UsPath %stat 
global QS   pvB   pvBS pvZ   KZB  PGB ...
       LZ   hL    KZ   nT    Lw   eew ...
       c    n          XnkH  m_max ...
       GX   mm    qX   RVD      ...
       DxHF n_290 dvaX dvaX1  

global RVDn  RVh mm_max

AV     = 0; 
UsPath = chdir; %'D:\MyDoc\MATLAB\';
%stat   = zeros(21,m_max);

if Last        %  З А Г Р У З К А  рез-тов  последней сессии
   try   load( [UsPath '\daSV\Last']);        
   catch ME, AV = ME.message; end
else           %  З А Г Р У З К А  рез-тов  из базы
   chdir([UsPath '\daSV']) 
   while true            
      try   fn = uigetfile('*.mat');                           
      catch ME, prib(ME.message);  continue,end
         
      if fn == 0
         AV = 'Выход без выбора файла';  break
      else               
         clear QS 
         try load (fn, '-mat');
             if exist('QS','var'),   break
             else  prie('Загружен не тот файл'); end
         catch ME, AV = ME.message;
             break
         end           
      end     
   end 
   chdir(UsPath)
end
%dvaX(4,:)=(dvaX(4,:)*pi).^2;
if ischar(AV),   return,end

%if isempty(eKZ)
   try,  usTab;
   catch ME,  prib(ME.message); return,end
%end

set( handles.PGB,  'Data',   num2cell(PGB') );
set( handles.LZh,  'String', sprintf('%g   %g   %g',LZ, hL) );
set( handles.Tip,  'String', TSV{nT})
set( handles.c,    'String', num2str(c) );

set( handles.Lw,   'String', num2str(Lw) );
set( handles.n,    'Value',  n );

set( handles.XnkH, 'String', sprintf('%g   %g   %g',XnkH) );
set( handles.m_max,'Value',  m_max);

set( handles.m1,   {'String' 'Value'}, { mm_max(1:m_max) mm(1)} );
set( handles.m9,   {'String' 'Value'}, { mm_max(1:m_max) mm(2)} );
set( handles.qX,   'String', num2str(qX) );

iniRV( RVD )
RVDn = RVD;  

rm = dvaX(1,:);                 % рейндж аз чисел m
UTO = S123( QS, LZ,hL,KZ, nT,n,c, GX(rm,:), mm, n_290, dvaX, dvaX1 );  
if prich(UTO),  return,end
if UTO
    % вставить уточнения
end

% _______________% Установка постоянных таблиц __________________________________________________
function usTab  
global  eKZ   KZBU  KZB  TFL  TSV  tabNOS
global  xRPI  xRPK  RPK  xPZ  iNAs
global  Ieq1  Yeq1 Keq1 nuliJ0 nuliJ1    % загрузка в след строках
global  mm_max  NePoks  
global  vhea  eVs eVTs HFs ahis bJYIK
global  eps2 eps10  eps100  Em2 Ep2 Em10 Ep10 Em100 Ep100 Ep9 Em9 Em8 Ep8

load('Zeq1');   % содержит Ieq1 Yeq1 Keq1
load('nuliJ01');

mm_max = {'1' '2' '3' '4' '5' '6' '7' '8' '9' '10' '11' '12' '13' ...
         '14' '15' '16' '17' '18' '19' '20' '21' '22' '23' '24' '25'};  
NePoks = zeros(1,2);

% nT =  1 2 3 4     индексы апертуры для разных nT
iNAs = [1 2 1 2; ... % индексы n_max 
        2 1 3 3; ... % индексы n_средн
        3 3 2 1];    % индексы n_min
    
TSV={'1) e1 > 1 > e3','2) 1 > e1 > e3','3) e1 > e3 > 1','4) 1 > e3 > e1'};

% ф-ции для выч хф HF для разных nT
vhea = { @VEP_1        @VEP_2        @VEP_3  @VEP_4;...
         @HF_1         @HF_2         @HF_3   @HF_4; ...
         @eT_1         @eT_2         @eT_3   @eT_4; ...
        {@ahPM @ahPP} {@ahMP @ahPP} {@ahPM} {@ahMP}}; 
    
% nT =       1             2             3       4
eVs  = { @eV_1         @eV_2         @eV_3   @eV_4 };
eVTs = { @eVT_1        @eVT_2        @eVT_3  @eVT_4};
HFs  = { @HF_1         @HF_2         @HF_3   @HF_4};
ahis = {{@ahPM @ahPP} {@ahMP @ahPP} {@ahPM} {@ahMP}};  
   
         % numb   vect   matrix   -  типы сх1, сх2, х2, х3
bJYIK = {{ @bePMn @bePMv @bePMm;  ... % nT=1  доп х2^2 < 0  io=1
           @bePPn @bePPv @bePPm1} ... %           х2^2 > 0  io=2        
         { @beMPn @beMPv @beMPm;  ... % nT=2  доп x1^2 < 0  io=1
           @bePPn @bePPv @bePPm2} ... %           х1^2 > 0  io=2         
         { @bePMn @bePMv @bePMm } ... % nT=3  доп х2^2 < 0  io=1   
         { @beMPn @beMPv @beMPm }};   % nT=4  доп x1^2 < 0  io=1
             
%новая стр {@JIK;   @JJY}   {@IJY;   @JJY}   ''      ''      ''};

eKZ_tr = [...% 1с.-SiO2; 2c.-GeO2; 3c.-B2O3;
%Ge  Bor   A1         A2         A3         л1          л2          л3 
0    0   0.6961663  0.4079426  0.8974794  0.0684043   0.1162414  9.896161;...
100  0   0.80686642 0.71815848 0.85416831 0.068972606 0.15396605 11.841931;...
0    100 0.61       0.32       1.26       0.09        0.16       9.89;...
          % Флеминг: 4-9 стр
4.1  0   0.68671749 0.43481505 0.89656582 0.072675189 0.11514351 10.002398;...
7    0   0.68698290 0.44479505 0.79073512 0.078087582 0.11551840 10.436628;...
13.5 0   0.73454395 0.42710828 0.82103399 0.086976930 0.11195191 10.846540;...

0.1  5.4 0.69681388 0.40865177 0.89374039 0.070555513 0.11765660 9.8754801;...
4.03 9.7 0.70420420 0.41289413 0.95238253 0.067974973 0.12147738 9.6436219;...
9.1  7.7 0.72393884 0.41129541 0.79292034 0.085826532 0.10705260 9.3772959;...
          % Кобаяши: 10-17 строки
3.1  0   0.7028554  0.4146307  0.8974540  0.0727723   0.1143085  9.896161;...
3.5  0   0.7042038  0.4160032  0.9074049  0.0514415   0.1291600  9.896156;...
5.8  0   0.7088876  0.4206803  0.8956551  0.0609053   0.1254514  9.896162;...
7.9  0   0.7136824  0.4254807  0.8964226  0.0617167   0.1270814  9.896161;...

0    3   0.6935408  0.4052977  0.9111432  0.0717021   0.1256396  9.896154;...
0    3.5 0.6929642  0.4047468  0.9154064  0.0604843   0.1239609  9.896152;...
2.2  3.3 0.6993390  0.4111269  0.9035275  0.0617482   0.1242404  9.896158;...
3.3  9.2 0.6958807  0.4076588  0.9401093  0.0665654   0.1211422  9.896140];

eKZ  = eKZ_tr';      % Экспериментальные эталонные KZ

KZBU = eKZ(3:end,3); % задание к-тов Зельм. для 100% B2O3 по умолч
eKZ(3:end,3) = KZB;  % задание к-тов Зельм. для 100% B2O3 для последн вар-та

TFL = {...           % сообщения для Solv
'1. Реш найд в fzero',          ...
'2. Реш найд в Solv: x=Veps при m=1 & SOS & x0(2)=Veps & EXT=3',...
'3. Реш найд в ILKA: x=Veps | x:HF(x)=0 точно',...
'4. Нач значение FL при новом i', ...  
'5. Найд интервал локализации ILK',... 
'6. 1-й соскок. Испр x0. m>1',...
'7. Перескок. В кач-ве х0 берется 2-й полуинтервал [хT; x0(2)]',...
'8. Программа ILKA не нашла реш',... 
'9. Резерв',...
'10. fzero: ошибка в выч HF',...
'11. FL<0: HF=Cmp|NaN|Inf|Sing|can not detect a change in sign',...
'12. Решение о выходе принято пользователем в ILKR'};      

% Если x > xRPI, то полагаем Результ.Произведение In'/In = -1 для всех n
xRPI = 700.921793694445966593;
% Если x > xRPK(n), то полагаем Результ.Произведение Kn'/Kn = RPK(n) 
xRPK = [...
697.8733872133284 697.8741026498899 697.8762489493187 697.8798260808491 ...
697.8848339932074 697.8912726146153 697.8991418527960 697.9084415949798 ...
697.9191717079129 697.9313320378677 697.9449224106526 697.9599426316257 ...
697.9763924857089 697.9942717374029 698.0135801308051 698.0343173896276 ...
698.0564832172174 698.0800772965784 698.1050992903938 698.1315488410506 ];

RPK = [                -1.000717231216139067  -1.0007203059725837362 ...
-1.0007254295138855178 -1.0007326017078518943 -1.0007418223593625713 ...
-1.0007530912103874069 -1.0007664079400103893 -1.0007817721644596613 ...
-1.0007991834371435831 -1.0008186412486928252 -1.0008401450270084891 ...
-1.0008636941373162375 -1.0008892878822264299 -1.0009169255018002501 ...
-1.0009466061736218095 -1.0009783290128762161 -1.001012093072433591  ...
-1.001047897342939015  -1.0010857407529083909 -1.0011256221688301994 ];

tabNOS = [1 1;  -1 1;  0 1;  1 0;  -1 0;  0 0;  1 -1;  -1 -1;  0 -1];

% границы Потери Значимости для бесс ф-ций
% расч по ф-ле   xPZ(n) = n/2*(n!*1e-300)^(1/n)  см. ТСВ2, лист 39
% если х < xPZ(n), то  Jn(x) = 0,  Kn(x) = Inf
xPZ = [                 2.500000000000000e-301  1.000000000000000e-150 ...
2.163374355461140e-100  3.722419436408399e-075  5.669832888165093e-060 ...
8.001504826020036e-050  1.488810935826484e-042  4.366377770382750e-037 ...
8.020156654069166e-033  2.112726637866066e-029  1.352954556807377e-026 ...
2.995206924485201e-024  2.925770821381441e-022  1.501350898896931e-020 ...
4.600014893008183e-019  9.264336835424282e-018  1.320072130110231e-016 ...
1.409230424563003e-015  1.179293061900797e-014  8.021484175205879e-014 ];

eps2 = eps+eps;   eps10 = 10.0*eps;    eps100 = 100.0*eps;
Em2  = 1-eps2;    Em10  = 1-eps10;     Em100  = 1-eps100;
Ep2  = 1+eps2;    Ep10  = 1+eps10;     Ep100  = 1+eps100;
Em9  = 1-1e-9;    Em8   = 1-1e-8;
Ep9  = 1+1e-9;    Ep8   = 1+1e-8;